[project]
name = "langgraph-project-example-a"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "onikarubi", email = "printuserselect@gmail.com" }
]
requires-python = ">=3.13"
dependencies = [
    "arxiv>=2.2.0",
    "click>=8.2.1",
    "fastapi>=0.115.14",
    "fastmcp>=2.10.1",
    "google-cloud-aiplatform[langchain,reasoningengine]>=1.76.0",
    "httpx>=0.27.0",
    "langchain-chroma>=0.2.4",
    "langchain-community>=0.3.26",
    "langchain-core>=0.3.66",
    "langchain-google-vertexai>=2.0.13",
    "langchain-openai>=0.3.27",
    "langchain-text-splitters>=0.3.8",
    "langgraph>=0.5.0",
    "langgraph-cli[inmem]>=0.3.3",
    "langgraph-sdk>=0.1.72",
    "mcp[cli]>=1.10.1",
    "pydantic-settings>=2.10.1",
    "pymupdf>=1.26.3",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "python-dotenv>=1.1.1",
]

[project.scripts]
graph-server = "app:main"
simple-chatbot = "graphs.simple_chatbot:main"
mcp-server-jsonplaceholder = "mcp_servers.jsonplaceholder:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [
    "src/mcp_servers/jsonplaceholder",
    "src/graphs",
    "src/app"
]

[tool.pytest.ini_options]
addopts = "-p no:warnings"
log_cli = true
pythonpath = "./src"

[tool.ruff]
line-length = 135
src = ["src", "tests"]
exclude = [".venv"]

[tool.ruff.lint]
select = [
    "I",
    "F",
    "E",
    "S",
    "N",
    "B"
]
ignore = [
    "F401",
    "E501",
    "S101",
    "E402",  # Module level import not at top of file
    "S603",  # subprocess call: check for execution of untrusted input
    "S607",  # Starting a process with a partial executable path
    "S104"   # Possible binding to all interfaces
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
docstring-code-format = true

[dependency-groups]
dev = [
    "freezegun>=1.5.2",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.1",
]
